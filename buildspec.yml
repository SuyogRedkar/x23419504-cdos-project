version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8

    commands:
      - rm -rf env  # Delete any previous virtual environment
      - python -m venv env
      - source env/bin/activate || . env/bin/activate
      - pip install --upgrade pip
      - pip install -r requirements.txt pylint
      # Install SonarQube Scanner
      - apt-get update
      - apt-get install -y jq
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - echo "Current path is >>>"
      - sh $pwd
      - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
      - ls $pwd
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/

  pre_build:
    commands:
      - python --version
      - ls
      - echo "Running pylint on project root..."
      - pylint --disable=C,W,R *.py 
      - echo "Running pylint on store_inventory..."
      - pylint --disable=C,W,R store_inventory/**/*.py

  build:
    commands:
      - echo "Build phase ..."
      - sonar-scanner -Dsonar.login=3a9a4d18967764e731d1e05341dfa447d8f08555 -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=x23419504-cdos-project -Dsonar.organization=suyogredkar
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=x23419504-cdos-project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi

artifacts:
  files:
    - '**/*'
